mod Main {
    effect !State {
        get(): Int
        set(n: Int): () 
    }

    handler state: a !State -> fn(Int): a {
        return(x) {
            fn(s: Int): a {
                x
            }
        }
        get(): fn(Int): a {
            fn(s: Int): a {
                f <- resume(s);
                f(s)
            }
        }
        set(n: Int): fn(Int): () {
            fn(s: Int): a {
                f <- resume(());
                f(n)
            }
        }
    }
}
